set names utf8;
USE STAT_DATABASE;

ALTER TABLE `bill_login`
PARTITION BY RANGE(UNIX_TIMESTAMP(`stat_time`)) 
(
    PARTITION p20201201 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-01')),
    PARTITION p20201202 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-02')),
    PARTITION p20201203 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-03')),
    PARTITION p20201204 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-04')),
    PARTITION p20201205 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-05'))
);

ALTER TABLE `bill_item`
PARTITION BY RANGE(UNIX_TIMESTAMP(`stat_time`)) 
(
    PARTITION p20201201 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-01')),
    PARTITION p20201202 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-02')),
    PARTITION p20201203 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-03')),
    PARTITION p20201204 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-04')),
    PARTITION p20201205 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-05'))
);

ALTER TABLE `bill_equip`
PARTITION BY RANGE(UNIX_TIMESTAMP(`stat_time`))
(
    PARTITION p20201201 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-01')),
    PARTITION p20201202 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-02')),
    PARTITION p20201203 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-03')),
    PARTITION p20201204 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-04')),
    PARTITION p20201205 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-05'))
);

ALTER TABLE `bill_constel`
PARTITION BY RANGE(UNIX_TIMESTAMP(`stat_time`)) 
(
    PARTITION p20201201 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-01')),
    PARTITION p20201202 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-02')),
    PARTITION p20201203 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-03')),
    PARTITION p20201204 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-04')),
    PARTITION p20201205 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-05'))
);

ALTER TABLE `bill_first_fight`
PARTITION BY RANGE(UNIX_TIMESTAMP(`stat_time`)) 
(
    PARTITION p20201201 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-01')),
    PARTITION p20201202 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-02')),
    PARTITION p20201203 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-03')),
    PARTITION p20201204 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-04')),
    PARTITION p20201205 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-05'))
);

ALTER TABLE `bill_fight_pass`
PARTITION BY RANGE(UNIX_TIMESTAMP(`stat_time`)) 
(
    PARTITION p20201201 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-01')),
    PARTITION p20201202 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-02')),
    PARTITION p20201203 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-03')),
    PARTITION p20201204 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-04')),
    PARTITION p20201205 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-05'))
);

ALTER TABLE `bill_anti_cheating`
PARTITION BY RANGE(UNIX_TIMESTAMP(`stat_time`)) 
(
    PARTITION p20201201 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-01')),
    PARTITION p20201202 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-02')),
    PARTITION p20201203 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-03')),
    PARTITION p20201204 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-04')),
    PARTITION p20201205 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-05'))
);

ALTER TABLE `bill_anti_score`
PARTITION BY RANGE(UNIX_TIMESTAMP(`stat_time`)) 
(
    PARTITION p20201201 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-01')),
    PARTITION p20201202 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-02')),
    PARTITION p20201203 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-03')),
    PARTITION p20201204 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-04')),
    PARTITION p20201205 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-05'))
);

ALTER TABLE `bill_mail`
PARTITION BY RANGE(UNIX_TIMESTAMP(`stat_time`)) 
(
    PARTITION p20201201 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-01')),
    PARTITION p20201202 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-02')),
    PARTITION p20201203 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-03')),
    PARTITION p20201204 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-04')),
    PARTITION p20201205 VALUES LESS THAN (UNIX_TIMESTAMP('2020-12-05'))
);

DELIMITER ||

DROP PROCEDURE IF EXISTS create_Partition || 
CREATE PROCEDURE create_Partition (IN databaseName VARCHAR(50),IN tableName VARCHAR(50))  
L_END:BEGIN
    DECLARE MAX_PARTITION_DESCRIPTION INT DEFAULT 0;
    DECLARE P_NAME VARCHAR(255) DEFAULT 0;         
    DECLARE P_DESCRIPTION VARCHAR(255) DEFAULT 0;     
    DECLARE i INT DEFAULT 1;  
    DECLARE ISEXIST_PARTITION VARCHAR(255) DEFAULT 0;
    SELECT PARTITION_NAME INTO ISEXIST_PARTITION FROM information_schema.PARTITIONS WHERE TABLE_SCHEMA = databaseName AND TABLE_NAME = tableName  LIMIT 1 ;  

    IF ISEXIST_PARTITION <=> "" THEN  
       SELECT "Partition table not is exist" AS "*****ERROR*****";  
       LEAVE  L_END;  
    END IF;  

    SELECT partition_description INTO MAX_PARTITION_DESCRIPTION  FROM information_schema.PARTITIONS WHERE TABLE_SCHEMA = databaseName AND TABLE_NAME = tableName ORDER BY partition_description DESC LIMIT 1; 

    WHILE i <= 1500 DO  
           SET P_DESCRIPTION = DATE_ADD(FROM_UNIXTIME(MAX_PARTITION_DESCRIPTION, '%Y-%m-%d'), INTERVAL i day);  
           SET P_NAME = REPLACE(P_DESCRIPTION, '-', '');  
           SET @S=CONCAT('ALTER TABLE ',tableName,' ADD PARTITION  (PARTITION p',P_NAME,' VALUES LESS THAN (UNIX_TIMESTAMP( \'',P_DESCRIPTION,'\')))');  
           SELECT @S;  
           PREPARE stmt2 FROM @S;  
           EXECUTE stmt2;  
           DEALLOCATE PREPARE stmt2;  
           SET i = i + 1 ;  
    END WHILE;       
END L_END;||  
DELIMITER ;

CALL create_Partition('STAT_DATABASE','bill_login');
CALL create_Partition('STAT_DATABASE','bill_item');
CALL create_Partition('STAT_DATABASE','bill_equip');
CALL create_Partition('STAT_DATABASE','bill_constel');
CALL create_Partition('STAT_DATABASE','bill_first_fight');
CALL create_Partition('STAT_DATABASE','bill_fight_pass');
CALL create_Partition('STAT_DATABASE','bill_anti_cheating');
CALL create_Partition('STAT_DATABASE','bill_anti_score');
CALL create_Partition('STAT_DATABASE','bill_mail');
