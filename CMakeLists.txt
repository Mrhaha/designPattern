CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

PROJECT(touhou_svr VERSION 1.0.1)

## 获取GIT SHA1  BEGIN
INCLUDE(cmake/GetGitRevisionDescription.cmake REQUIRED)
get_git_head_revision(GIT_REFSPEC GIT_SHA1)
MESSAGE(STATUS "Git Sha1 - " ${GIT_SHA1})
## 获取GIT SHA1  END

## 获取编译平台  BEGIN
SET(USE_PLATFORM "LOCAL" "THHANT" "TOUHOU")
OPTION(BUILD_PLATFORM "THIS IS THE SERVER BUILD PLATFORM" OFF)
LIST(FIND USE_PLATFORM ${BUILD_PLATFORM} FIND_PLATFORM) 
IF(FIND_PLATFORM GREATER -1)
	MESSAGE(STATUS "Build Platform - " ${BUILD_PLATFORM})
	MESSAGE(STATUS "Build Platform Index - " ${FIND_PLATFORM})
ELSE()
	message(FATAL_ERROR "UNKONW BUILD_PLATFORM, MUST IN [${USE_PLATFORM}]")
ENDIF(FIND_PLATFORM GREATER -1)
## 获取编译平台  END

## 设置编译类型  BEGIN
IF (CMAKE_BUILD_TYPE STREQUAL Debug)
	ADD_DEFINITIONS(-DDEBUG)
	#SET(CMAKE_CXX_FLAGS_DEBUG "-O0 -DDEBUG -fsanitize=address,undefined -fno-omit-frame-pointer")
ENDIF()

## 设置编译类型  END

## 设置公共包含目录 BEGIN
SET(LIBRARY_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/include")
SET(LOGIC_SOURCE_DIR "${PROJECT_SOURCE_DIR}/server/logic_server")
SET(COMMON_INCLUDE_DIR
		${LIBRARY_INCLUDE_DIR}/common
		${LIBRARY_INCLUDE_DIR}/logicso
		${LIBRARY_INCLUDE_DIR}/protocol
		${LIBRARY_INCLUDE_DIR}/session_key
		${LIBRARY_INCLUDE_DIR}/util
		${LIBRARY_INCLUDE_DIR}/utility
		${LIBRARY_INCLUDE_DIR}/zookeeper
		${LIBRARY_INCLUDE_DIR}/json
		/usr/include/
		/usr/local/include/
		/usr/local/mysql/include/
		/usr/local/msgpack/include/
		)
## 设置公共包含目录 END

## 设置结果输出  BEGIN
SET(BIN_OUTPUT_PATH "${PROJECT_SOURCE_DIR}/Bin")
SET(BIN_PUBLISH_PATH "${PROJECT_SOURCE_DIR}/Publish")
#SET(LIBRARY_OUTPUT_PATH "${PROJECT_SOURCE_DIR}/Lib")
SET(AUTH_OUTPUT_PATH "${BIN_OUTPUT_PATH}/AuthServer/bin")
SET(BILL_OUTPUT_PATH "${BIN_OUTPUT_PATH}/BillServer/bin")
SET(CONN_OUTPUT_PATH "${BIN_OUTPUT_PATH}/Connector/bin")
SET(CROSS_OUTPUT_PATH "${BIN_OUTPUT_PATH}/CrossServer/bin")
SET(LOGIC_OUTPUT_PATH "${BIN_OUTPUT_PATH}/LogicServer/bin")
SET(QUEUE_OUTPUT_PATH "${BIN_OUTPUT_PATH}/QueueServer/bin")
SET(TOOLS_OUTPUT_PATH "${BIN_OUTPUT_PATH}/Tools")
## 设置结果输出  END

INSTALL(DIRECTORY ${BIN_OUTPUT_PATH}/ DESTINATION ${BIN_PUBLISH_PATH})

ADD_SUBDIRECTORY(library)
ADD_SUBDIRECTORY(server)
ADD_SUBDIRECTORY(tools)
